{
	"compiler": {
		"version": "0.8.25+commit.b61c2a91"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "decode",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "dx",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "daddr",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "dname",
						"type": "string"
					},
					{
						"internalType": "uint256[2]",
						"name": "darray",
						"type": "uint256[2]"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "decode2",
				"outputs": [
					{
						"internalType": "string",
						"name": "ss",
						"type": "string"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "encode",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "result",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "encodePacked",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "result",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "encodeWithSelector",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "result",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "encodeWithSignature",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "result",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "27 abi Application Binary Interface 编码 4个变量 abi.encode(***) * 每个参数 填充32bytes 拼接在一起 中间很多0 abi.encodePacked(***)   不与合约交互时，可以使用这个 节省空间；比如算hash;根据参数使用最低空间 abi.encodeWithSignature(\"foo(uint256)\",234)   前面4个字节放函数选择器 kecaak abi.encodeWithSelector(bytes4(keccak256(\"foo(uint256,address,string,uint256[2])\")), x, addr, name, array);   还是上一个方便  call调用只需要知道selector bytes4 + params  不需要知道函数名  解码 decode  貌似只能解码 abi.encode的结果",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"27_abi/abiTest.sol": "abiDemo"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"27_abi/abiTest.sol": {
			"keccak256": "0xb0df5f4e63837830d0e25839c6f5fd6be4d9ef1f065629b5066cf8c79b00f339",
			"license": "MIT",
			"urls": [
				"bzz-raw://a73db6faf200283b2e440419cb6791fe5bedef81c8cf213a3b4f5048ad7826d1",
				"dweb:/ipfs/QmcQYwkWLSSo2nNij8dHWcLuYKdN6zwhhPsn3z1gc15qFN"
			]
		}
	},
	"version": 1
}